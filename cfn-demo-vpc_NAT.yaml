---
AWSTemplateFormatVersion: 2010-09-09
Description: 'Demo CloudFormation - demo - VPC Stack '

Parameters:
  Environment:
    Description: demo Environment
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/build/environment/demo'

  VPCCIDRBLOCK:
    Description: VPC CidrBlock
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/vpc/CidrBlock'

  Client:
    Description: Client Name
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/client'


  AvailabiltyZone1:
    Description: Set Availability Zone 1
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/AvailabiltyZone1'
  AvailabiltyZone2:
    Description: Set Availability Zone 2
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/AvailabiltyZone2'

  KeyPairName:
    Description: Key file used to SSH into servers
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/KeyPairName'

  PublicSubnet1cidr:
    Description: Public subnet ID for ELB AZ1.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/publicsubnet1cidr'
  PublicSubnet2cidr:
    Description: Public subnet ID for ELB AZ2.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/publicsubnet2cidr'


  PrivateSubnet1cidr:
    Description: Private subnet ID for RDS AZ1.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/privatesubnet1cidr'
  PrivateSubnet2cidr:
    Description: Private subnet ID for RDS AZ2.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/privatesubnet2cidr'
  PrivateSubnet3cidr:
    Description: Private subnet ID for EFS AZ1.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/privatesubnet3cidr'
  PrivateSubnet4cidr:
    Description: Private subnet ID for EFS AZ2.
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/demo/subnet/privatesubnet4cidr'   
    

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDRBLOCK
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub 'vpc-${Environment}-${Client}-${AWS::Region}'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub 'igw-${Environment}-${Client}-${AWS::Region}'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  NATGATEWAY1:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP1
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:        
      - Key: Name
        Value: !Sub 'nat-${Environment}-${Client}-${AWS::Region}-az1'
  EIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGATEWAY2:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIP2
        - AllocationId
      SubnetId:
        Ref: PublicSubnet2
      Tags:        
      - Key: Name
        Value: !Sub 'nat-${Environment}-${Client}-${AWS::Region}-az2'        
  EIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet1cidr
      AvailabilityZone:
        Ref: AvailabiltyZone1
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-elb-public-${AWS::Region}-az1'
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet2cidr
      AvailabilityZone:
        Ref: AvailabiltyZone2
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-elb-public-${AWS::Region}-az2'


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub 'rtb-${Environment}-${Client}-public-${AWS::Region}-az1'

  PublicRouteTableAssociation:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicRouteTable

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet1cidr
      AvailabilityZone:
        Ref: AvailabiltyZone1
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-rds-private-${AWS::Region}-az1'
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet2cidr
      AvailabilityZone:
        Ref: AvailabiltyZone2
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-rds-private-${AWS::Region}-az2'
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet3cidr
      AvailabilityZone:
        Ref: AvailabiltyZone1
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-web-private-${AWS::Region}-az1'
  PrivateSubnet4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet4cidr
      AvailabilityZone:
        Ref: AvailabiltyZone2
      Tags:
      - Key: Name
        Value: !Sub 'subnet-${Environment}-${Client}-web-private-${AWS::Region}-az2'                                     

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: PrivateRouteTable
  PrivateSubnetRouteTableAssociation4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet4
      RouteTableId:
        Ref: PrivateRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub 'rtb-${Environment}-${Client}-private-${AWS::Region}-az1'

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub 'rtb-${Environment}-${Client}-EGRESS_TO_PUBLIC-az1'
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: !Sub 'rtb-${Environment}-${Client}-EGRESS_TO_PUBLIC-az2'
  PrivateNATRouteTableAssociation1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGATEWAY1
  PrivateNATRouteTableAssociation2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGATEWAY2                  



Outputs:
  StackName:
    Description: Name of the stack as specified with the cfn-create-stack command.
    Value:
      Ref: 'AWS::StackName'
  RegionName:
    Description: Name of the stack as specified with the cfn-create-stack command.
    Value:
      Ref: 'AWS::Region'
  VPCID:
    Description: VPC
    Value: !Ref VPC
    Export:
      Name: !Sub 'vpc-${Environment}-${Client}-${AWS::Region}-VPCId'
  PublicRouteTable:
    Description: route table public
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub 'rtb-${Environment}-${Client}-public-${AWS::Region}'
  InternetGatewayID:
    Description: InternetGateway
    Value: !Ref InternetGateway
  PublicSubnetId1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-elb-public-${AWS::Region}-az1'
  PublicSubnetId2:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-elb-public-${AWS::Region}-az2'
  KeyPairName:
    Value: !Ref KeyPairName
    Export:
      Name: !Sub 'keypair-${Environment}-${Client}-${AWS::Region}'
  PrivateRouteTable:
    Description: route table Private
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub 'rtb-${Environment}-${Client}-private-${AWS::Region}'
  PrivateSubnetId1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-rds-private-${AWS::Region}-az1'
  PrivateSubnetId2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-rds-private-${AWS::Region}-az2'
  PrivateSubnetId3:
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-web-private-${AWS::Region}-az1'
  PrivateSubnetId4:
    Value: !Ref PrivateSubnet4
    Export:
      Name: !Sub 'subnet-${Environment}-${Client}-web-private-${AWS::Region}-az2'        
